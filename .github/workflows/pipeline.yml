name: Deploy Super Mario Game to AWS EKS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: eu-north-1

jobs:
  terraform:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Terraform Init
        working-directory: ./EKS-TF
        run: terraform init

      - name: Terraform Plan
        working-directory: ./EKS-TF
        run: terraform plan

      - name: Terraform Destroy (cleanup)
        working-directory: ./EKS-TF
        run: terraform destroy -auto-approve || true
        continue-on-error: true

      - name: Terraform Apply
        working-directory: ./EKS-TF
        run: terraform apply -auto-approve

  deploy:
    name: Deploy Application
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig
        working-directory: ./EKS-TF
        run: |
          CLUSTER_NAME=$(terraform output -raw cluster_name)
          echo "Cluster name: $CLUSTER_NAME"
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name $CLUSTER_NAME

      - name: Deploy to EKS
        run: |
          kubectl apply -f deployment.yml
          kubectl apply -f service.yml

      - name: Get Service URL
        run: |
          echo "Waiting for service to get external IP..."
          kubectl get service mario-service --output jsonpath='{.status.loadBalancer.ingress[0].hostname}'