name: Deploy Super Mario Game to AWS EKS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: eu-north-1
  EKS_CLUSTER_NAME: eks-super-mario-game-cluster

jobs:
  terraform:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Terraform Init
        working-directory: ./EKS-TF
        run: terraform init

      - name: Terraform Plan
        working-directory: ./EKS-TF
        run: terraform plan

      - name: Terraform Apply
        working-directory: ./EKS-TF
        run: |
          terraform apply -auto-approve || {
            echo "Apply failed, trying to import existing resources..."
            terraform import aws_iam_role.eks_cluster eks-super-mario-game-eks-cluster-role || true
            terraform import aws_iam_role.eks_node_group eks-super-mario-game-eks-node-group-role || true
            terraform apply -auto-approve
          }

  deploy:
    name: Deploy Application
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}

      - name: Deploy to EKS
        run: |
          kubectl apply -f deployment.yml
          kubectl apply -f service.yml

      - name: Get Service URL
        run: |
          echo "Waiting for service to get external IP..."
          kubectl get service mario-service --output jsonpath='{.status.loadBalancer.ingress[0].hostname}'